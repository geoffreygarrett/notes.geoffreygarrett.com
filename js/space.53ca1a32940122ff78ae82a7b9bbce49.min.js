import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e5);let artifactCanvas=document.getElementById("artifactCanvas");const renderer=new THREE.WebGLRenderer({antialias:!0,canvas:artifactCanvas});renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement);const light=new THREE.PointLight(16777215,1,0);light.position.set(0,0,10),scene.add(light),light.intensity=2.5;import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import{DRACOLoader}from"three/examples/jsm/loaders/DRACOLoader.js";const loader=new GLTFLoader,dracoLoader=new DRACOLoader;dracoLoader.setDecoderPath("/examples/js/libs/draco/"),loader.setDRACOLoader(dracoLoader);let model;loader.setPath("../models/"),loader.load("New_Horizons.glb",function(e){model=e.scene,model.scale.set(1,1,1),model.rotation.x=Math.PI/2,model.layers.enable(0),scene.add(model)});const sphereGeometry=new THREE.SphereGeometry(.2,32,32),sphereMaterial=new THREE.MeshBasicMaterial({color:16776960}),sphere=new THREE.Mesh(sphereGeometry,sphereMaterial);sphere.position.set(0,0,50),scene.add(sphere),render.renderToScreen=!0,camera.position.set(5.52,.1,4.78);function displayCameraInfo(){const e=document.getElementById("info");e.innerHTML=`
        <p>Camera position: ${camera.position.x.toFixed(2)}, ${camera.position.y.toFixed(2)}, ${camera.position.z.toFixed(2)}</p>
        <p>Camera rotation: ${camera.rotation.x.toFixed(2)}, ${camera.rotation.y.toFixed(2)}, ${camera.rotation.z.toFixed(2)}</p>
        <p>Camera fov: ${camera.fov.toFixed(2)}</p>
        <p>Camera aspect: ${camera.aspect.toFixed(2)}</p>
        <p>Camera near: ${camera.near.toFixed(2)}</p>
    `}const loader2=new THREE.CubeTextureLoader,texture=loader2.load(["../images/right.png","../images/left.png","../images/top.png","../images/bottom.png","../images/front.png","../images/back.png"]),skybox=new THREE.Mesh(new THREE.SphereGeometry(1e5,20,20),new THREE.MeshBasicMaterial({envMap:texture,side:THREE.BackSide}));scene.add(skybox);function animate(){requestAnimationFrame(animate),renderer.render(scene,camera),model&&(model.rotation.y+=9e-4)}animate(),window.addEventListener("resize",()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)});const controls=new OrbitControls(camera,renderer.domElement);controls.update()